name: CI

on:
  pull_request:

  push:
    branches:
      - master

  # smoelius: Every Thursday at 3:00 UTC (Wednesday at 22:00 EST), run `cargo test -- --ignored`.
  schedule:
    - cron: "0 3 * * 4"

  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Dylint versions
        run: cargo search dylint | sort | tee dylint_versions

      # smoelius: The `~/.cargo/` entries are from:
      # * https://github.com/actions/cache/blob/main/examples.md#rust---cargo.
      # * https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
      # The rest were added by me.
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.dylint_drivers/
            ~/.rustup/toolchains/
            target/dylint/
          key: ${{ runner.os }}-dylint-${{ hashFiles('dylint_versions') }}

      - name: Rustup
        run: rustup update

      - name: Install llvm
        run: sudo apt-get install llvm

      - name: Actionlint
        run: go install github.com/rhysd/actionlint/cmd/actionlint@latest && "$HOME"/go/bin/actionlint --shellcheck='-e SC2016'

      - name: Shellcheck
        run: shellcheck --exclude=SC2002 scripts/*

      - name: Prettier
        run: npm install -g prettier && prettier --check '**/*.json' '**/*.md' '**/*.yml'

      # smoelius: Pin `markdown-link-check` to version 3.10.3 until the following issue is resolved:
      # https://github.com/tcort/markdown-link-check/issues/246
      - name: Markdown link check
        run: npm install -g markdown-link-check@3.10.3 && markdown-link-check ./**/*.md

      # https://github.com/DevinR528/cargo-sort/issues/57#issuecomment-1457714872
      - name: Cargo sort
        run: |
          cargo install cargo-sort || true
          find . -name Cargo.toml -print0 | xargs -0 -n 1 dirname | xargs -n 1 cargo sort --check --grouped --no-format

      - name: Format
        run: |
          rustup +nightly component add rustfmt
          cargo +nightly fmt && git diff --exit-code

      - name: Format README
        run: ./scripts/update_README.sh && git diff --exit-code

      - name: License
        run: |
          cargo install cargo-license || true
          ./scripts/check_licenses.sh

      - name: Clippy
        run: |
          rustup +nightly component add clippy
          ./scripts/clippy.sh

      - name: Dylint
        run: |
          cargo install cargo-dylint dylint-link || true
          ./scripts/dylint.sh

      - name: Udeps
        run: |
          cargo install cargo-udeps || true
          cargo clean && cargo +nightly udeps --features=test-fuzz/auto_concretize --all-targets

  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        serde_format: [bincode, cbor, cbor4ii]
        toolchain: [stable, nightly]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set toolchain
        run: rustup default ${{ matrix.toolchain }}

      - name: Install llvm
        run: sudo apt-get install llvm

      # smoelius: The Substrate tests require `protoc`.
      - name: Install protoc
        run: sudo apt-get install protobuf-compiler

      - name: Install afl
        run: cargo install afl

      - name: Run afl-system-config
        run: |
          test "$(ls ~/.local/share/afl.rs | wc -l)" -eq 1
          test "$(ls ~/.local/share/afl.rs/rustc-* | wc -l)" -eq 1
          sudo "$HOME"/.local/share/afl.rs/rustc-*/afl.rs-*/afl/bin/afl-system-config

      # smoelius: The wasm32 target is needed for some Substrate tests, regardless of the toolchain
      # used to build test-fuzz.
      - name: Add wasm32 target
        run: |
          rustup          target add wasm32-unknown-unknown
          rustup +nightly target add wasm32-unknown-unknown

      - name: Test
        run: |
          AUTO_CONCRETIZE=
          SHUFFLE=
          if [[ ${{ matrix.toolchain }} = nightly ]]; then
            AUTO_CONCRETIZE='--features=test-fuzz/auto_concretize'
            SHUFFLE='-Z unstable-options --shuffle --test-threads=1'
          fi
          TEST_CMD="cargo test --features=test-fuzz/serde_${{ matrix.serde_format }} $AUTO_CONCRETIZE -- --nocapture $SHUFFLE"
          $TEST_CMD
          if [[ ${{ github.event_name }} = 'schedule' ]] ||
            git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -w 'patches\|third_party' >/dev/null
          then
            $TEST_CMD --ignored
          fi
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: warn

  test-uninstalled-cargo-afl:
    runs-on: ubuntu-latest

    env:
      RUSTUP_TOOLCHAIN: nightly

    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          OUTPUT="$(cargo run -p cargo-test-fuzz -- test-fuzz -p test-fuzz-examples --no-run 2>&1 1>/dev/null || true)"
          echo "$OUTPUT"
          echo "$OUTPUT" | grep '^Error: Could not determine `cargo-afl` version. Is it installed? Try `cargo install afl`.$'

  test-incompatible-cargo-afl:
    runs-on: ubuntu-latest

    env:
      RUSTUP_TOOLCHAIN: nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install llvm
        run: sudo apt-get install llvm

      - name: Install older afl
        run: cargo install afl --version=0.11.0

      - name: Test
        run: |
          OUTPUT="$(cargo run -p cargo-test-fuzz -- test-fuzz -p test-fuzz-examples --no-run 2>&1 1>/dev/null || true)"
          echo "$OUTPUT"
          echo "$OUTPUT" | grep '^Error: `[^`]*` depends on `afl [^`]*`, which is incompatible with `cargo-afl [^`]*`.$'

  test-newer-afl:
    runs-on: ubuntu-latest

    env:
      RUSTUP_TOOLCHAIN: nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install llvm
        run: sudo apt-get install llvm

      - name: Install afl 0.12.1
        run: cargo install afl --version=0.12.1

      - name: Require afl 0.12.2
        run: |
          sed -i 's/^\(afl = {.*\<version = "\)[^"]*\(".*}\)$/\1=0.12.2\2/' test-fuzz/Cargo.toml

      - name: Test
        run: |
          OUTPUT="$(cargo run -p cargo-test-fuzz -- test-fuzz -p test-fuzz-examples --no-run 2>&1 1>/dev/null || true)"
          echo "$OUTPUT"
          echo "$OUTPUT" | grep '^`[^`]*` depends on `afl [^`]*`, which is newer than `cargo-afl [^`]*`.'
          echo "$OUTPUT" | grep 'Consider upgrading with `cargo install afl --force --version [^`]*`.$'

  test-incompatible-test-fuzz:
    runs-on: ubuntu-latest

    env:
      RUSTUP_TOOLCHAIN: nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install llvm
        run: sudo apt-get install llvm

      - name: Install afl
        run: cargo install afl

      - name: Downgrade test-fuzz version
        run: |
          sed -i 's/^\(version = "\)[^.]*\.[^.]*\.\([^"]*"\)$/\10.0.\2/' test-fuzz/Cargo.toml
          sed -i 's/^\(test-fuzz = {.*\<version = "=\)[^.]*\.[^.]*\.\([^"]*".*}\)$/\10.0.\2/' cargo-test-fuzz/Cargo.toml examples/Cargo.toml

      - name: Test
        run: |
          OUTPUT="$(cargo run -p cargo-test-fuzz -- test-fuzz -p test-fuzz-examples --no-run 2>&1 1>/dev/null || true)"
          echo "$OUTPUT"
          echo "$OUTPUT" | grep '^Error: `[^`]*` depends on `test-fuzz [^`]*`, which is incompatible with `cargo-test-fuzz [^`]*`.$'

  test-newer-test-fuzz:
    runs-on: ubuntu-latest

    env:
      RUSTUP_TOOLCHAIN: nightly

    steps:
      - uses: actions/checkout@v3

      - name: Install llvm
        run: sudo apt-get install llvm

      - name: Install afl
        run: cargo install afl

      - name: Upgrade test-fuzz version
        run: |
          sed -i 's/^\(version = "[^.]*\.[^.]*\)\.[^"]*\("\)$/\1.255\2/' test-fuzz/Cargo.toml
          sed -i 's/^\(test-fuzz = {.*\<version = "=[^.]*\.[^.]*\)\.[^"]*\(".*}\)$/\1.255\2/' cargo-test-fuzz/Cargo.toml examples/Cargo.toml
          sed -i 's/^\(version = "[^-]*\)-[^"]*\("\)$/\1\2/' cargo-test-fuzz/Cargo.toml

      - name: Test
        run: |
          OUTPUT="$(cargo run -p cargo-test-fuzz -- test-fuzz -p test-fuzz-examples --no-run 2>&1 1>/dev/null || true)"
          echo "$OUTPUT"
          echo "$OUTPUT" | grep '^`[^`]*` depends on `test-fuzz [^`]*`, which is newer than `cargo-test-fuzz [^`]*`.'
          echo "$OUTPUT" | grep 'Consider upgrading with `cargo install cargo-test-fuzz --force --version [^`]*`.$'

  all-checks:
    needs:
      - lint
      - test
      - test-uninstalled-cargo-afl
      - test-incompatible-cargo-afl
      - test-newer-afl
      - test-incompatible-test-fuzz
      - test-newer-test-fuzz

    runs-on: ubuntu-latest

    steps:
      - run: true
